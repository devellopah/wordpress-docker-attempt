version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: app.dockerfile
    image: devellopah/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes:
      - ./public:/var/www/html:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
  #Nginx Service
  webserver:
    image: nginx:stable-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html:delegated
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
      - db
      - phpmyadmin
      - mailhog

  #MySQL Service
  db:
    image: mysql:5.7.29
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf

  #PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - PMA_USER=wordpress
      - PMA_PASSWORD=wordpress
    depends_on:
      - db

  #Mailhog Service
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

  # npm:
  #   image: node:13.7
  #   container_name: npm
  #   volumes:
  #     - ./public:/var/www/html
  #   ports:
  #     - 3000:3000
  #     - 3001:3001
  #   working_dir: /var/www/html
  #   entrypoint: ['npm']

volumes:
  dbdata:
    driver: local